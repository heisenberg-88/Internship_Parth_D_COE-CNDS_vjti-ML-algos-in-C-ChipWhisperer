   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"simpleserial-base.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.get_key,"ax",%progbits
  16              		.align	1
  17              		.global	get_key
  18              		.arch armv7e-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	get_key:
  25              	.LVL0:
  26              	.LFB3:
  27              		.file 1 "simpleserial-base.c"
   1:simpleserial-base.c **** #include "hal.h"
   2:simpleserial-base.c **** #include<stdio.h>
   3:simpleserial-base.c **** #include <stdint.h>
   4:simpleserial-base.c **** #include <stdlib.h>
   5:simpleserial-base.c **** #include <math.h>
   6:simpleserial-base.c **** 
   7:simpleserial-base.c **** #include "simpleserial.h"
   8:simpleserial-base.c **** 
   9:simpleserial-base.c **** 
  10:simpleserial-base.c **** 
  11:simpleserial-base.c **** uint8_t get_key(uint8_t* k, uint8_t len)
  12:simpleserial-base.c **** {
  28              		.loc 1 12 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  13:simpleserial-base.c **** 	// Load key here
  14:simpleserial-base.c **** 	return 0x00;
  33              		.loc 1 14 2 view .LVU1
  15:simpleserial-base.c **** }
  34              		.loc 1 15 1 is_stmt 0 view .LVU2
  35 0000 0020     		movs	r0, #0
  36              	.LVL1:
  37              		.loc 1 15 1 view .LVU3
  38 0002 7047     		bx	lr
  39              		.cfi_endproc
  40              	.LFE3:
  42              		.section	.rodata.str1.1,"aMS",%progbits,1
  43              	.LC0:
  44 0000 7200     		.ascii	"r\000"
  45              	.LC1:
  46 0002 4C696E44 		.ascii	"LinData.txt\000"
  46      6174612E 
  46      74787400 
  47              	.LC2:
  48 000e 256600   		.ascii	"%f\000"
  49              		.section	.text.get_pt,"ax",%progbits
  50              		.align	1
  51              		.global	get_pt
  52              		.syntax unified
  53              		.thumb
  54              		.thumb_func
  55              		.fpu softvfp
  57              	get_pt:
  58              	.LVL2:
  59              	.LFB6:
  16:simpleserial-base.c **** static void delay_2ms(void)
  17:simpleserial-base.c **** {
  18:simpleserial-base.c ****     for(volatile unsigned int i=0;i<0xfff;i++){
  19:simpleserial-base.c ****         ;
  20:simpleserial-base.c ****     }
  21:simpleserial-base.c **** }
  22:simpleserial-base.c **** float avgError(float* xdata,float* ydata,int n,float m,float c){
  23:simpleserial-base.c ****     float temp = 0.0;
  24:simpleserial-base.c ****     float pred ;
  25:simpleserial-base.c ****     for(int i=0;i<n;i++){
  26:simpleserial-base.c ****         pred = (xdata[i]*m + c);
  27:simpleserial-base.c ****         temp+= (fabs(ydata[i] - pred))/n;
  28:simpleserial-base.c ****     }
  29:simpleserial-base.c ****     return temp;
  30:simpleserial-base.c **** }
  31:simpleserial-base.c **** #if SS_VER == SS_VER_2_0
  32:simpleserial-base.c **** uint8_t get_pt(uint8_t cmd ,uint8_t scmd,uint8_t len,uint8_t* pt)
  33:simpleserial-base.c **** #else
  34:simpleserial-base.c **** uint8_t get_pt(uint8_t* pt, uint8_t len)
  35:simpleserial-base.c **** #endif
  36:simpleserial-base.c ****     
  37:simpleserial-base.c **** {
  60              		.loc 1 37 1 is_stmt 1 view -0
  61              		.cfi_startproc
  62              		@ args = 0, pretend = 0, frame = 16
  63              		@ frame_needed = 0, uses_anonymous_args = 0
  38:simpleserial-base.c **** 	/**********************************
  39:simpleserial-base.c **** 	* Start user-specific code here. */
  40:simpleserial-base.c **** 	trigger_high();
  64              		.loc 1 40 2 view .LVU5
  37:simpleserial-base.c **** 	/**********************************
  65              		.loc 1 37 1 is_stmt 0 view .LVU6
  66 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
  67              	.LCFI0:
  68              		.cfi_def_cfa_offset 28
  69              		.cfi_offset 4, -28
  70              		.cfi_offset 5, -24
  71              		.cfi_offset 6, -20
  72              		.cfi_offset 7, -16
  73              		.cfi_offset 8, -12
  74              		.cfi_offset 9, -8
  75              		.cfi_offset 14, -4
  76 0004 85B0     		sub	sp, sp, #20
  77              	.LCFI1:
  78              		.cfi_def_cfa_offset 48
  37:simpleserial-base.c **** 	/**********************************
  79              		.loc 1 37 1 view .LVU7
  80 0006 8046     		mov	r8, r0
  81              		.loc 1 40 2 view .LVU8
  82 0008 FFF7FEFF 		bl	trigger_high
  83              	.LVL3:
  41:simpleserial-base.c **** 
  42:simpleserial-base.c **** 	//16 hex bytes held in 'pt' were sent
  43:simpleserial-base.c **** 	//from the computer. Store your response
  44:simpleserial-base.c **** 	//back into 'pt', which will send 16 bytes
  45:simpleserial-base.c **** 	//back to computer. Can ignore of course if
  46:simpleserial-base.c **** 	//not needed
  47:simpleserial-base.c ****     
  48:simpleserial-base.c ****         //linr
  49:simpleserial-base.c ****     float x,y,m,c,d;
  84              		.loc 1 49 5 is_stmt 1 view .LVU9
  50:simpleserial-base.c ****     int n = 84;
  85              		.loc 1 50 5 view .LVU10
  51:simpleserial-base.c ****     float sumx=0,sumxsq=0,sumy=0,sumxy=0;
  86              		.loc 1 51 5 view .LVU11
  52:simpleserial-base.c **** 
  53:simpleserial-base.c ****     FILE* file = fopen("LinData.txt","r");
  87              		.loc 1 53 5 view .LVU12
  88              		.loc 1 53 18 is_stmt 0 view .LVU13
  89 000c 2549     		ldr	r1, .L7
  90 000e 2648     		ldr	r0, .L7+4
  91              	.LBB6:
  54:simpleserial-base.c ****     float numx;
  55:simpleserial-base.c ****     float numy;
  56:simpleserial-base.c ****     float* ydata = malloc(sizeof(float)*n);
  57:simpleserial-base.c ****     float* xdata = malloc(sizeof(float)*n);
  58:simpleserial-base.c **** 
  59:simpleserial-base.c ****     for(int i=0;i<n;i++){
  60:simpleserial-base.c ****         fscanf(file,"%f",&numx);
  92              		.loc 1 60 9 view .LVU14
  93 0010 DFF89890 		ldr	r9, .L7+8
  94              	.LBE6:
  53:simpleserial-base.c ****     float numx;
  95              		.loc 1 53 18 view .LVU15
  96 0014 FFF7FEFF 		bl	fopen
  97              	.LVL4:
  98 0018 0446     		mov	r4, r0
  99              	.LVL5:
  54:simpleserial-base.c ****     float numx;
 100              		.loc 1 54 5 is_stmt 1 view .LVU16
  55:simpleserial-base.c ****     float* ydata = malloc(sizeof(float)*n);
 101              		.loc 1 55 5 view .LVU17
  56:simpleserial-base.c ****     float* xdata = malloc(sizeof(float)*n);
 102              		.loc 1 56 5 view .LVU18
  56:simpleserial-base.c ****     float* xdata = malloc(sizeof(float)*n);
 103              		.loc 1 56 20 is_stmt 0 view .LVU19
 104 001a 4FF4A870 		mov	r0, #336
 105              	.LVL6:
  56:simpleserial-base.c ****     float* xdata = malloc(sizeof(float)*n);
 106              		.loc 1 56 20 view .LVU20
 107 001e FFF7FEFF 		bl	malloc
 108              	.LVL7:
 109 0022 0746     		mov	r7, r0
 110              	.LVL8:
  57:simpleserial-base.c **** 
 111              		.loc 1 57 5 is_stmt 1 view .LVU21
  57:simpleserial-base.c **** 
 112              		.loc 1 57 20 is_stmt 0 view .LVU22
 113 0024 4FF4A870 		mov	r0, #336
 114              	.LVL9:
  57:simpleserial-base.c **** 
 115              		.loc 1 57 20 view .LVU23
 116 0028 FFF7FEFF 		bl	malloc
 117              	.LVL10:
 118              	.LBB7:
  59:simpleserial-base.c ****         fscanf(file,"%f",&numx);
 119              		.loc 1 59 13 view .LVU24
 120 002c 0025     		movs	r5, #0
 121              	.LBE7:
  57:simpleserial-base.c **** 
 122              		.loc 1 57 20 view .LVU25
 123 002e 0646     		mov	r6, r0
 124              	.LVL11:
  59:simpleserial-base.c ****         fscanf(file,"%f",&numx);
 125              		.loc 1 59 5 is_stmt 1 view .LVU26
 126              	.LBB8:
  59:simpleserial-base.c ****         fscanf(file,"%f",&numx);
 127              		.loc 1 59 9 view .LVU27
  59:simpleserial-base.c ****         fscanf(file,"%f",&numx);
 128              		.loc 1 59 17 view .LVU28
 129              	.L3:
 130              		.loc 1 60 9 discriminator 3 view .LVU29
 131 0030 01AA     		add	r2, sp, #4
 132 0032 4946     		mov	r1, r9
 133 0034 2046     		mov	r0, r4
 134 0036 FFF7FEFF 		bl	fscanf
 135              	.LVL12:
  61:simpleserial-base.c ****         x = numx;
 136              		.loc 1 61 9 discriminator 3 view .LVU30
  62:simpleserial-base.c ****         fseek(file,1,SEEK_CUR);
 137              		.loc 1 62 9 discriminator 3 view .LVU31
 138 003a 0122     		movs	r2, #1
 139 003c 1146     		mov	r1, r2
 140 003e 2046     		mov	r0, r4
 141 0040 FFF7FEFF 		bl	fseek
 142              	.LVL13:
  63:simpleserial-base.c ****         fscanf(file,"%f",&numy);
 143              		.loc 1 63 9 discriminator 3 view .LVU32
 144 0044 02AA     		add	r2, sp, #8
 145 0046 4946     		mov	r1, r9
 146 0048 2046     		mov	r0, r4
 147 004a FFF7FEFF 		bl	fscanf
 148              	.LVL14:
  64:simpleserial-base.c ****         y = numy;
 149              		.loc 1 64 9 discriminator 3 view .LVU33
  65:simpleserial-base.c ****         ydata[i] = numy;
 150              		.loc 1 65 9 discriminator 3 view .LVU34
 151              		.loc 1 65 18 is_stmt 0 discriminator 3 view .LVU35
 152 004e 029B     		ldr	r3, [sp, #8]	@ float
 153 0050 47F82530 		str	r3, [r7, r5, lsl #2]	@ float
  66:simpleserial-base.c ****         xdata[i] = numx;
 154              		.loc 1 66 9 is_stmt 1 discriminator 3 view .LVU36
  67:simpleserial-base.c **** 
  68:simpleserial-base.c ****         sumx=sumx+x;
  69:simpleserial-base.c ****         sumxsq=sumxsq+(x*x);
  70:simpleserial-base.c ****         sumy=sumy+y;
  71:simpleserial-base.c ****         sumxy=sumxy+(x*y);
  72:simpleserial-base.c **** 
  73:simpleserial-base.c ****         fseek(file,1,SEEK_CUR);
 155              		.loc 1 73 9 is_stmt 0 discriminator 3 view .LVU37
 156 0054 0122     		movs	r2, #1
  66:simpleserial-base.c ****         xdata[i] = numx;
 157              		.loc 1 66 18 discriminator 3 view .LVU38
 158 0056 019B     		ldr	r3, [sp, #4]	@ float
 159 0058 46F82530 		str	r3, [r6, r5, lsl #2]	@ float
  68:simpleserial-base.c ****         sumxsq=sumxsq+(x*x);
 160              		.loc 1 68 9 is_stmt 1 discriminator 3 view .LVU39
  69:simpleserial-base.c ****         sumy=sumy+y;
 161              		.loc 1 69 9 discriminator 3 view .LVU40
  70:simpleserial-base.c ****         sumxy=sumxy+(x*y);
 162              		.loc 1 70 9 discriminator 3 view .LVU41
  71:simpleserial-base.c **** 
 163              		.loc 1 71 9 discriminator 3 view .LVU42
 164              		.loc 1 73 9 discriminator 3 view .LVU43
 165 005c 1146     		mov	r1, r2
 166 005e 2046     		mov	r0, r4
  59:simpleserial-base.c ****         fscanf(file,"%f",&numx);
 167              		.loc 1 59 22 is_stmt 0 discriminator 3 view .LVU44
 168 0060 0135     		adds	r5, r5, #1
 169              	.LVL15:
 170              		.loc 1 73 9 discriminator 3 view .LVU45
 171 0062 FFF7FEFF 		bl	fseek
 172              	.LVL16:
  59:simpleserial-base.c ****         fscanf(file,"%f",&numx);
 173              		.loc 1 59 21 is_stmt 1 discriminator 3 view .LVU46
  59:simpleserial-base.c ****         fscanf(file,"%f",&numx);
 174              		.loc 1 59 17 discriminator 3 view .LVU47
  59:simpleserial-base.c ****         fscanf(file,"%f",&numx);
 175              		.loc 1 59 5 is_stmt 0 discriminator 3 view .LVU48
 176 0066 542D     		cmp	r5, #84
 177 0068 E2D1     		bne	.L3
 178              	.LBE8:
  74:simpleserial-base.c ****     }
  75:simpleserial-base.c **** 
  76:simpleserial-base.c **** 
  77:simpleserial-base.c ****     d=n*sumxsq-sumx*sumx;
 179              		.loc 1 77 5 is_stmt 1 view .LVU49
 180              	.LVL17:
  78:simpleserial-base.c ****     m=(n*sumxy-sumx*sumy)/d;
 181              		.loc 1 78 5 view .LVU50
  79:simpleserial-base.c ****     c=(sumy*sumxsq-sumx*sumxy)/d;
 182              		.loc 1 79 5 view .LVU51
  80:simpleserial-base.c ****     
  81:simpleserial-base.c ****     float ans = avgError(xdata,ydata,n,m,c);
 183              		.loc 1 81 5 view .LVU52
  82:simpleserial-base.c **** //     printf("accuracy : %f ",100.00 - ans*100.00);
  83:simpleserial-base.c **** 
  84:simpleserial-base.c ****     free(ydata);
 184              		.loc 1 84 5 view .LVU53
 185 006a 3846     		mov	r0, r7
 186 006c FFF7FEFF 		bl	free
 187              	.LVL18:
  85:simpleserial-base.c ****     free(xdata);
 188              		.loc 1 85 5 view .LVU54
 189 0070 3046     		mov	r0, r6
 190 0072 FFF7FEFF 		bl	free
 191              	.LVL19:
  86:simpleserial-base.c ****     
  87:simpleserial-base.c ****     delay_2ms();
 192              		.loc 1 87 5 view .LVU55
 193              	.LBB9:
 194              	.LBI9:
  16:simpleserial-base.c **** {
 195              		.loc 1 16 13 view .LVU56
 196              	.LBE9:
  18:simpleserial-base.c ****         ;
 197              		.loc 1 18 5 view .LVU57
 198              	.LBB12:
 199              	.LBB10:
  18:simpleserial-base.c ****         ;
 200              		.loc 1 18 9 view .LVU58
  18:simpleserial-base.c ****         ;
 201              		.loc 1 18 31 is_stmt 0 view .LVU59
 202 0076 0023     		movs	r3, #0
 203 0078 0393     		str	r3, [sp, #12]
  18:simpleserial-base.c ****         ;
 204              		.loc 1 18 5 view .LVU60
 205 007a 40F6FE72 		movw	r2, #4094
 206              	.L4:
  18:simpleserial-base.c ****         ;
 207              		.loc 1 18 35 is_stmt 1 view .LVU61
  18:simpleserial-base.c ****         ;
 208              		.loc 1 18 36 is_stmt 0 view .LVU62
 209 007e 039B     		ldr	r3, [sp, #12]
  18:simpleserial-base.c ****         ;
 210              		.loc 1 18 5 view .LVU63
 211 0080 9342     		cmp	r3, r2
 212 0082 0AD9     		bls	.L5
 213              	.LBE10:
 214              	.LBE12:
  88:simpleserial-base.c **** 	trigger_low();
 215              		.loc 1 88 2 is_stmt 1 view .LVU64
 216 0084 FFF7FEFF 		bl	trigger_low
 217              	.LVL20:
  89:simpleserial-base.c **** 	/* End user-specific code here. *
  90:simpleserial-base.c **** 	********************************/
  91:simpleserial-base.c **** 	simpleserial_put('r', 16, pt);
 218              		.loc 1 91 2 view .LVU65
 219 0088 4246     		mov	r2, r8
 220 008a 1021     		movs	r1, #16
 221 008c 7220     		movs	r0, #114
 222 008e FFF7FEFF 		bl	simpleserial_put
 223              	.LVL21:
  92:simpleserial-base.c **** 	return 0x00;
 224              		.loc 1 92 2 view .LVU66
  93:simpleserial-base.c **** }
 225              		.loc 1 93 1 is_stmt 0 view .LVU67
 226 0092 0020     		movs	r0, #0
 227 0094 05B0     		add	sp, sp, #20
 228              	.LCFI2:
 229              		.cfi_remember_state
 230              		.cfi_def_cfa_offset 28
 231              		@ sp needed
 232 0096 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 233              	.LVL22:
 234              	.L5:
 235              	.LCFI3:
 236              		.cfi_restore_state
 237              	.LBB13:
 238              	.LBB11:
  19:simpleserial-base.c ****     }
 239              		.loc 1 19 9 is_stmt 1 view .LVU68
  18:simpleserial-base.c ****         ;
 240              		.loc 1 18 43 view .LVU69
  18:simpleserial-base.c ****         ;
 241              		.loc 1 18 44 is_stmt 0 view .LVU70
 242 009a 039B     		ldr	r3, [sp, #12]
 243 009c 0133     		adds	r3, r3, #1
 244 009e 0393     		str	r3, [sp, #12]
 245 00a0 EDE7     		b	.L4
 246              	.L8:
 247 00a2 00BF     		.align	2
 248              	.L7:
 249 00a4 00000000 		.word	.LC0
 250 00a8 02000000 		.word	.LC1
 251 00ac 0E000000 		.word	.LC2
 252              	.LBE11:
 253              	.LBE13:
 254              		.cfi_endproc
 255              	.LFE6:
 257              		.section	.text.reset,"ax",%progbits
 258              		.align	1
 259              		.global	reset
 260              		.syntax unified
 261              		.thumb
 262              		.thumb_func
 263              		.fpu softvfp
 265              	reset:
 266              	.LFB10:
 267              		.cfi_startproc
 268              		@ args = 0, pretend = 0, frame = 0
 269              		@ frame_needed = 0, uses_anonymous_args = 0
 270              		@ link register save eliminated.
 271 0000 0020     		movs	r0, #0
 272 0002 7047     		bx	lr
 273              		.cfi_endproc
 274              	.LFE10:
 276              		.global	__aeabi_fmul
 277              		.global	__aeabi_fadd
 278              		.global	__aeabi_fsub
 279              		.global	__aeabi_f2d
 280              		.global	__aeabi_i2d
 281              		.global	__aeabi_ddiv
 282              		.global	__aeabi_dadd
 283              		.global	__aeabi_d2f
 284              		.section	.text.avgError,"ax",%progbits
 285              		.align	1
 286              		.global	avgError
 287              		.syntax unified
 288              		.thumb
 289              		.thumb_func
 290              		.fpu softvfp
 292              	avgError:
 293              	.LVL23:
 294              	.LFB5:
  22:simpleserial-base.c ****     float temp = 0.0;
 295              		.loc 1 22 64 is_stmt 1 view -0
 296              		.cfi_startproc
 297              		@ args = 4, pretend = 0, frame = 0
 298              		@ frame_needed = 0, uses_anonymous_args = 0
  23:simpleserial-base.c ****     float pred ;
 299              		.loc 1 23 5 view .LVU72
  24:simpleserial-base.c ****     for(int i=0;i<n;i++){
 300              		.loc 1 24 5 view .LVU73
  25:simpleserial-base.c ****         pred = (xdata[i]*m + c);
 301              		.loc 1 25 5 view .LVU74
 302              	.LBB14:
  25:simpleserial-base.c ****         pred = (xdata[i]*m + c);
 303              		.loc 1 25 9 view .LVU75
  25:simpleserial-base.c ****         pred = (xdata[i]*m + c);
 304              		.loc 1 25 9 is_stmt 0 view .LVU76
 305              	.LBE14:
  22:simpleserial-base.c ****     float temp = 0.0;
 306              		.loc 1 22 64 view .LVU77
 307 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 308              	.LCFI4:
 309              		.cfi_def_cfa_offset 40
 310              		.cfi_offset 3, -40
 311              		.cfi_offset 4, -36
 312              		.cfi_offset 5, -32
 313              		.cfi_offset 6, -28
 314              		.cfi_offset 7, -24
 315              		.cfi_offset 8, -20
 316              		.cfi_offset 9, -16
 317              		.cfi_offset 10, -12
 318              		.cfi_offset 11, -8
 319              		.cfi_offset 14, -4
  22:simpleserial-base.c ****     float temp = 0.0;
 320              		.loc 1 22 64 view .LVU78
 321 0004 8346     		mov	fp, r0
 322 0006 8A46     		mov	r10, r1
 323 0008 1646     		mov	r6, r2
 324 000a 1F46     		mov	r7, r3
 325              	.LBB15:
  25:simpleserial-base.c ****         pred = (xdata[i]*m + c);
 326              		.loc 1 25 13 view .LVU79
 327 000c 0025     		movs	r5, #0
 328              	.LBE15:
  23:simpleserial-base.c ****     float pred ;
 329              		.loc 1 23 11 view .LVU80
 330 000e 0024     		movs	r4, #0
 331              	.LVL24:
 332              	.L11:
 333              	.LBB16:
  25:simpleserial-base.c ****         pred = (xdata[i]*m + c);
 334              		.loc 1 25 17 is_stmt 1 discriminator 1 view .LVU81
  25:simpleserial-base.c ****         pred = (xdata[i]*m + c);
 335              		.loc 1 25 5 is_stmt 0 discriminator 1 view .LVU82
 336 0010 B542     		cmp	r5, r6
 337 0012 02DB     		blt	.L12
 338              	.LBE16:
  29:simpleserial-base.c **** }
 339              		.loc 1 29 5 is_stmt 1 view .LVU83
  30:simpleserial-base.c **** #if SS_VER == SS_VER_2_0
 340              		.loc 1 30 1 is_stmt 0 view .LVU84
 341 0014 2046     		mov	r0, r4
 342 0016 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 343              	.LVL25:
 344              	.L12:
 345              	.LBB17:
  26:simpleserial-base.c ****         temp+= (fabs(ydata[i] - pred))/n;
 346              		.loc 1 26 9 is_stmt 1 discriminator 3 view .LVU85
  27:simpleserial-base.c ****     }
 347              		.loc 1 27 9 discriminator 3 view .LVU86
  26:simpleserial-base.c ****         temp+= (fabs(ydata[i] - pred))/n;
 348              		.loc 1 26 25 is_stmt 0 discriminator 3 view .LVU87
 349 001a 5BF82510 		ldr	r1, [fp, r5, lsl #2]	@ float
 350 001e 3846     		mov	r0, r7
 351 0020 FFF7FEFF 		bl	__aeabi_fmul
 352              	.LVL26:
  26:simpleserial-base.c ****         temp+= (fabs(ydata[i] - pred))/n;
 353              		.loc 1 26 14 discriminator 3 view .LVU88
 354 0024 0A99     		ldr	r1, [sp, #40]	@ float
 355 0026 FFF7FEFF 		bl	__aeabi_fadd
 356              	.LVL27:
 357 002a 0146     		mov	r1, r0
  27:simpleserial-base.c ****     }
 358              		.loc 1 27 31 discriminator 3 view .LVU89
 359 002c 5AF82500 		ldr	r0, [r10, r5, lsl #2]	@ float
 360 0030 FFF7FEFF 		bl	__aeabi_fsub
 361              	.LVL28:
  27:simpleserial-base.c ****     }
 362              		.loc 1 27 17 discriminator 3 view .LVU90
 363 0034 20F00040 		bic	r0, r0, #-2147483648
 364 0038 FFF7FEFF 		bl	__aeabi_f2d
 365              	.LVL29:
 366 003c 8046     		mov	r8, r0
  27:simpleserial-base.c ****     }
 367              		.loc 1 27 39 discriminator 3 view .LVU91
 368 003e 3046     		mov	r0, r6
  27:simpleserial-base.c ****     }
 369              		.loc 1 27 17 discriminator 3 view .LVU92
 370 0040 8946     		mov	r9, r1
  27:simpleserial-base.c ****     }
 371              		.loc 1 27 39 discriminator 3 view .LVU93
 372 0042 FFF7FEFF 		bl	__aeabi_i2d
 373              	.LVL30:
 374 0046 0246     		mov	r2, r0
 375 0048 0B46     		mov	r3, r1
 376 004a 4046     		mov	r0, r8
 377 004c 4946     		mov	r1, r9
 378 004e FFF7FEFF 		bl	__aeabi_ddiv
 379              	.LVL31:
 380 0052 8046     		mov	r8, r0
  27:simpleserial-base.c ****     }
 381              		.loc 1 27 13 discriminator 3 view .LVU94
 382 0054 2046     		mov	r0, r4
  27:simpleserial-base.c ****     }
 383              		.loc 1 27 39 discriminator 3 view .LVU95
 384 0056 8946     		mov	r9, r1
  27:simpleserial-base.c ****     }
 385              		.loc 1 27 13 discriminator 3 view .LVU96
 386 0058 FFF7FEFF 		bl	__aeabi_f2d
 387              	.LVL32:
 388 005c 0246     		mov	r2, r0
 389 005e 0B46     		mov	r3, r1
 390 0060 4046     		mov	r0, r8
 391 0062 4946     		mov	r1, r9
 392 0064 FFF7FEFF 		bl	__aeabi_dadd
 393              	.LVL33:
 394 0068 FFF7FEFF 		bl	__aeabi_d2f
 395              	.LVL34:
  25:simpleserial-base.c ****         pred = (xdata[i]*m + c);
 396              		.loc 1 25 22 discriminator 3 view .LVU97
 397 006c 0135     		adds	r5, r5, #1
 398              	.LVL35:
  27:simpleserial-base.c ****     }
 399              		.loc 1 27 13 discriminator 3 view .LVU98
 400 006e 0446     		mov	r4, r0
 401              	.LVL36:
  25:simpleserial-base.c ****         pred = (xdata[i]*m + c);
 402              		.loc 1 25 21 is_stmt 1 discriminator 3 view .LVU99
  25:simpleserial-base.c ****         pred = (xdata[i]*m + c);
 403              		.loc 1 25 21 is_stmt 0 discriminator 3 view .LVU100
 404 0070 CEE7     		b	.L11
 405              	.LBE17:
 406              		.cfi_endproc
 407              	.LFE5:
 409              		.section	.text.startup.main,"ax",%progbits
 410              		.align	1
 411              		.global	main
 412              		.syntax unified
 413              		.thumb
 414              		.thumb_func
 415              		.fpu softvfp
 417              	main:
 418              	.LFB8:
  94:simpleserial-base.c **** 
  95:simpleserial-base.c **** uint8_t reset(uint8_t* x, uint8_t len)
  96:simpleserial-base.c **** {
  97:simpleserial-base.c **** 	// Reset key here if needed
  98:simpleserial-base.c **** 	return 0x00;
  99:simpleserial-base.c **** }
 100:simpleserial-base.c **** 
 101:simpleserial-base.c **** 
 102:simpleserial-base.c **** 
 103:simpleserial-base.c **** int main(void)
 104:simpleserial-base.c **** {
 419              		.loc 1 104 1 is_stmt 1 view -0
 420              		.cfi_startproc
 421              		@ Volatile: function does not return.
 422              		@ args = 0, pretend = 0, frame = 0
 423              		@ frame_needed = 0, uses_anonymous_args = 0
 105:simpleserial-base.c ****     platform_init();
 424              		.loc 1 105 5 view .LVU102
 104:simpleserial-base.c ****     platform_init();
 425              		.loc 1 104 1 is_stmt 0 view .LVU103
 426 0000 08B5     		push	{r3, lr}
 427              	.LCFI5:
 428              		.cfi_def_cfa_offset 8
 429              		.cfi_offset 3, -8
 430              		.cfi_offset 14, -4
 431              		.loc 1 105 5 view .LVU104
 432 0002 FFF7FEFF 		bl	platform_init
 433              	.LVL37:
 106:simpleserial-base.c **** 	init_uart();
 434              		.loc 1 106 2 is_stmt 1 view .LVU105
 435 0006 FFF7FEFF 		bl	init_uart
 436              	.LVL38:
 107:simpleserial-base.c **** 	trigger_setup();
 437              		.loc 1 107 2 view .LVU106
 438 000a FFF7FEFF 		bl	trigger_setup
 439              	.LVL39:
 108:simpleserial-base.c **** 
 109:simpleserial-base.c ****  	/* Uncomment this to get a HELLO message for debug */
 110:simpleserial-base.c **** 	/*
 111:simpleserial-base.c **** 	putch('h');
 112:simpleserial-base.c **** 	putch('e');
 113:simpleserial-base.c **** 	putch('l');
 114:simpleserial-base.c **** 	putch('l');
 115:simpleserial-base.c **** 	putch('o');
 116:simpleserial-base.c **** 	putch('\n');
 117:simpleserial-base.c **** 	*/
 118:simpleserial-base.c **** 
 119:simpleserial-base.c **** 	simpleserial_init();
 440              		.loc 1 119 2 view .LVU107
 441 000e FFF7FEFF 		bl	simpleserial_init
 442              	.LVL40:
 120:simpleserial-base.c **** 	simpleserial_addcmd('p', 16, get_pt);
 443              		.loc 1 120 2 view .LVU108
 444 0012 094A     		ldr	r2, .L15
 445 0014 1021     		movs	r1, #16
 446 0016 7020     		movs	r0, #112
 447 0018 FFF7FEFF 		bl	simpleserial_addcmd
 448              	.LVL41:
 121:simpleserial-base.c **** #if SS_VER != SS_VER_2_0
 122:simpleserial-base.c **** 	simpleserial_addcmd('k', 16, get_key);
 449              		.loc 1 122 2 view .LVU109
 450 001c 074A     		ldr	r2, .L15+4
 451 001e 1021     		movs	r1, #16
 452 0020 6B20     		movs	r0, #107
 453 0022 FFF7FEFF 		bl	simpleserial_addcmd
 454              	.LVL42:
 123:simpleserial-base.c **** 	simpleserial_addcmd('x', 0, reset);
 455              		.loc 1 123 2 view .LVU110
 456 0026 064A     		ldr	r2, .L15+8
 457 0028 0021     		movs	r1, #0
 458 002a 7820     		movs	r0, #120
 459 002c FFF7FEFF 		bl	simpleserial_addcmd
 460              	.LVL43:
 461              	.L14:
 124:simpleserial-base.c **** #endif
 125:simpleserial-base.c **** 	while(1)
 462              		.loc 1 125 2 discriminator 1 view .LVU111
 126:simpleserial-base.c **** 		simpleserial_get();
 463              		.loc 1 126 3 discriminator 1 view .LVU112
 464 0030 FFF7FEFF 		bl	simpleserial_get
 465              	.LVL44:
 125:simpleserial-base.c **** 		simpleserial_get();
 466              		.loc 1 125 7 discriminator 1 view .LVU113
 467 0034 FCE7     		b	.L14
 468              	.L16:
 469 0036 00BF     		.align	2
 470              	.L15:
 471 0038 00000000 		.word	get_pt
 472 003c 00000000 		.word	get_key
 473 0040 00000000 		.word	reset
 474              		.cfi_endproc
 475              	.LFE8:
 477              		.text
 478              	.Letext0:
 479              		.file 2 "c:\\users\\parth\\chipwh~1\\cw\\home\\portable\\armgcc\\arm-none-eabi\\include\\machine\\
 480              		.file 3 "c:\\users\\parth\\chipwh~1\\cw\\home\\portable\\armgcc\\arm-none-eabi\\include\\sys\\_std
 481              		.file 4 "c:\\users\\parth\\chipwh~1\\cw\\home\\portable\\armgcc\\lib\\gcc\\arm-none-eabi\\10.2.1\\
 482              		.file 5 "c:\\users\\parth\\chipwh~1\\cw\\home\\portable\\armgcc\\arm-none-eabi\\include\\sys\\_typ
 483              		.file 6 "c:\\users\\parth\\chipwh~1\\cw\\home\\portable\\armgcc\\arm-none-eabi\\include\\sys\\reen
 484              		.file 7 "c:\\users\\parth\\chipwh~1\\cw\\home\\portable\\armgcc\\arm-none-eabi\\include\\sys\\lock
 485              		.file 8 "c:\\users\\parth\\chipwh~1\\cw\\home\\portable\\armgcc\\arm-none-eabi\\include\\stdio.h"
 486              		.file 9 ".././hal/hal.h"
 487              		.file 10 ".././hal/stm32f3/stm32f3_hal.h"
 488              		.file 11 ".././simpleserial/simpleserial.h"
 489              		.file 12 "c:\\users\\parth\\chipwh~1\\cw\\home\\portable\\armgcc\\arm-none-eabi\\include\\stdlib.h
DEFINED SYMBOLS
                            *ABS*:00000000 simpleserial-base.c
C:\Users\parth\AppData\Local\Temp\ccRJvRZ5.s:16     .text.get_key:00000000 $t
C:\Users\parth\AppData\Local\Temp\ccRJvRZ5.s:24     .text.get_key:00000000 get_key
C:\Users\parth\AppData\Local\Temp\ccRJvRZ5.s:50     .text.get_pt:00000000 $t
C:\Users\parth\AppData\Local\Temp\ccRJvRZ5.s:57     .text.get_pt:00000000 get_pt
C:\Users\parth\AppData\Local\Temp\ccRJvRZ5.s:249    .text.get_pt:000000a4 $d
C:\Users\parth\AppData\Local\Temp\ccRJvRZ5.s:258    .text.reset:00000000 $t
C:\Users\parth\AppData\Local\Temp\ccRJvRZ5.s:265    .text.reset:00000000 reset
C:\Users\parth\AppData\Local\Temp\ccRJvRZ5.s:285    .text.avgError:00000000 $t
C:\Users\parth\AppData\Local\Temp\ccRJvRZ5.s:292    .text.avgError:00000000 avgError
C:\Users\parth\AppData\Local\Temp\ccRJvRZ5.s:410    .text.startup.main:00000000 $t
C:\Users\parth\AppData\Local\Temp\ccRJvRZ5.s:417    .text.startup.main:00000000 main
C:\Users\parth\AppData\Local\Temp\ccRJvRZ5.s:471    .text.startup.main:00000038 $d

UNDEFINED SYMBOLS
trigger_high
fopen
malloc
fscanf
fseek
free
trigger_low
simpleserial_put
__aeabi_fmul
__aeabi_fadd
__aeabi_fsub
__aeabi_f2d
__aeabi_i2d
__aeabi_ddiv
__aeabi_dadd
__aeabi_d2f
platform_init
init_uart
trigger_setup
simpleserial_init
simpleserial_addcmd
simpleserial_get
